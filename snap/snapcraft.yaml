name: maas
adopt-info: maas
summary: Metal as a Service
description: |
  Total automation of your physical servers for amazing data center operational efficiency.
grade: stable
confinement: strict
base: core18
assumes:
  - snapd2.41
epoch: 1*
passthrough:
    system-usernames:
      snap_daemon: shared

plugs:
  maas-cli:
    interface: content
    content: maas-cli
    target: $SNAP/maas-cli/lib
    default-provider: maas-cli

apps:
  supervisor:
    daemon: simple
    command: bin/run-supervisord
    environment:
      LD_PRELOAD: $SNAP/usr/lib/stub_initgroups.so
    plugs:
        - avahi-observe # network discovery
        - block-devices # allows writing, but we need only reading.
        - hardware-observe
        - kernel-module-observe
        - mount-observe
        - network
        - network-bind
        - network-observe
        - network-control
        - system-observe
        - time-control # chrony

  maas:
    command: bin/ld-preload $SNAP/bin/maas
    plugs:
        - home
        - mount-observe  # to read /proc/*/mounts
        - network # for external authentication
        - network-bind # for postgres
        - network-observe # to get default URL

parts:
  maas-pypi:
    # Keep the pypi dependencies separate from the deb dependencies, so
    # that the pypi and deb versions of the same packages won't conflict
    # when building the wheels
    plugin: python
    source: snap/local/pypi
    requirements:
      - requirements.txt
    build-packages:
      - build-essential
      - bzr
      - git
      - libffi-dev
      - libpq-dev
      - libxml2-dev
      - libxslt1-dev

  maas:
    plugin: python
    source: .
    after:
        # Make sure the pypi packages are built first, before we install
        # the deb versions of possible dependencies.
        - maas-pypi
    stage-packages:
      - amtterm                 # AMT
      - libsoap-lite-perl       # Dependencies for AMT
      - libxml-parser-perl      # Dependencies for AMT
      - libxml-parser-lite-perl # Dependencies for AMT
      - wsmancli                # AMT
      - snmp                    # APC
      - wget                    # DLI
      - fence-agents            # Fence CDU
      - freeipmi-tools          # IPMI
      - ipmitool                # Moonshot
      - libvirt-clients         # Virsh
      - archdetect-deb
      - avahi-utils
      - bind9
      - gpgv
      - iproute2
      - isc-dhcp-client
      - isc-dhcp-server
      - libatm1
      - libjs-angularjs
      - libjs-jquery
      - libpq5
      - libxtables12
      - lshw
      - chrony
      - nginx-core
      - openssh-client
      - postgresql
      - python3-bson
      - python3-convoy
      - python3-crochet
      - python3-django
      - python3-django-piston3
      - python3-djorm-ext-pgarray
      - python3-distro-info
      - python3-formencode
      - python3-httplib2
      - python3-jsonschema
      - python3-lxml
      - python3-netaddr
      - python3-netifaces
      - python3-paramiko
      - python3-petname
      - python3-pexpect
      - python3-psycopg2
      - python3-pyparsing
      - python3-requests
      - python3-sphinx
      - python3-tempita
      - python3-twisted
      - python3-zope.interface
      - python3-seamicroclient
      - python3-txtftp
      - python3-yaml
      - python3-simplestreams
      - python3-curtin
      - python3-oauth
      - python3-oauthlib
      - python3-attr
      - python3-simplejson
      - python3-markupsafe
      - rsyslog
      - squid
      - tcpdump
      - ubuntu-keyring
      - util-linux
    organize:
        lib/python3.*/site-packages/etc/*: etc
        lib/python3.*/site-packages/usr/bin/*: usr/bin
        lib/python3.*/site-packages/usr/lib/*: usr/lib
        lib/python3.*/site-packages/usr/sbin/*: usr/sbin
        lib/python3.*/site-packages/usr/share/*: usr/share
        usr/lib/curtin/helpers: usr/lib/python3/dist-packages/helpers
    filesets:
      remove:
        - -lib/python3.*/site-packages/etc
        - -lib/python3.*/site-packages/usr
        - -lib/python3/dist-packages/maastesting
        - -share
        - -usr/bin/xdg-*
        - -usr/include/libjs-angularjs
        - -usr/share/applications
        - -usr/share/bug
        - -usr/share/debhelper
        - -usr/share/dh-python
        - -usr/share/doc
        - -usr/share/doc-base
        - -usr/share/lintian
        - -usr/share/man
        - -var/lib/ieee-data/oui36.txt
        - -var/lib/ieee-data/mam.txt
    stage:
      - $remove
    prime:
      - $remove
    override-build: |
      set -e
      snapcraftctl build
      ln -s -f ../usr/lib/postgresql/10/bin/initdb $SNAPCRAFT_PART_INSTALL/bin/initdb
      ln -s -f ../usr/lib/postgresql/10/bin/pg_ctl $SNAPCRAFT_PART_INSTALL/bin/pg_ctl
      ln -s -f ../usr/lib/postgresql/10/bin/postgres $SNAPCRAFT_PART_INSTALL/bin/postgres
      ln -s -f ../usr/lib/postgresql/10/bin/psql $SNAPCRAFT_PART_INSTALL/bin/psql
      # If python3-netaddr contains absolute symlinks.
      # See https://bugs.launchpad.net/snapcraft/+bug/1774410
      ln -s -f ../../../../../../var/lib/ieee-data/oui.txt $SNAPCRAFT_PART_INSTALL/usr/lib/python3/dist-packages/netaddr/eui/oui.txt
      ln -s -f ../../../../../../var/lib/ieee-data/iab.txt $SNAPCRAFT_PART_INSTALL/usr/lib/python3/dist-packages/netaddr/eui/iab.txt
    override-prime: |
      set -e
      snapcraftctl set-version $($SNAPCRAFT_PART_SRC/utilities/package-version)
      snapcraftctl prime

  region-static:
    plugin: dump
    source: src/maasserver/static
    organize:
      '*': usr/share/maas/web/static/


  machine-resources:
    plugin: make
    source: src/machine-resources
    build-snaps:
      - go
    build-packages:
      - go-dep
    artifacts:
      - bin
    organize:
      bin: usr/share/maas/machine-resources

  tree:
    plugin: dump
    source: snap/local/tree

  stub-initgroups:
    plugin: make
    source: snap/local/stub_initgroups
    artifacts:
        - stub_initgroups.so
    organize:
        stub_initgroups.so: usr/lib/stub_initgroups.so
    prime:
        - usr/lib/stub_initgroups.so

  snapcraft-preload:
    plugin: cmake
    source: https://github.com/sergiusens/snapcraft-preload
    source-type: git
    build-packages:
      - on amd64:
          - gcc-multilib
          - g++-multilib

  postgres-95:
    plugin: autotools
    source: .  # Ignored because of override-pull.
    override-pull: |
      set -e
      pull-lp-source postgresql-9.5 xenial
      mv postgresql-9.5*/* .
      echo "all:\ninstall:" > doc/Makefile  # Skips doc building.
    build-packages:
      - ubuntu-dev-tools
      - bison
      - flex
      - libreadline-dev
      - zlib1g-dev
      - python-dev
      - tcl8.6-dev
      - libssl-dev
      - libpam0g-dev
      - libxml2-dev
      - libldap2-dev
      - libxslt1-dev
      - uuid-dev
      - libxml2-utils
      - openjade
      - opensp
      - xsltproc
      - gettext
      - libperl-dev
      - dpkg-dev
    override-build: |
      set -e
      HOST_MULTIARCH=$(gcc -print-multiarch)
      ARCH=$(dpkg-architecture -qDEB_HOST_ARCH_BITS)
      if [ $ARCH -eq 64 ]; then
        EXTRA_CFLAGS="-fno-omit-frame-pointer"
      elif [ $ARCH -eq 32 ]; then
        EXTRA_CFLAGS="-fPIC -pie"
      fi
      ./configure \
        LDFLAGS="-Wl,--as-needed -L/usr/lib/mit-krb5 -L/usr/lib/$HOST_MULTIARCH/mit-krb5" \
        CFLAGS="-I/usr/include/mit-krb5 $EXTRA_CFLAGS" \
        --prefix=/usr/postgresql-9.5 \
        --localstatedir=/etc/postgresql-9.5 \
        --sysconfdir=/var/postgresql-9.5 \
        --enable-nls \
        --enable-integer-datetimes \
        --enable-thread-safety \
        --enable-tap-tests \
        --enable-debug \
        --disable-rpath \
        --with-uuid=e2fs \
        --with-gnu-ld \
        --with-pgport=5432 \
        --with-system-tzdata=/usr/share/zoneinfo \
        --with-ldap \
        --with-tcl \
        --with-tclconfig=/usr/lib/tcl8.6/ \
        --with-perl \
        --with-python \
        --with-pam \
        --with-openssl \
        --with-libxml \
        --with-libxslt && make world
      make install-world DESTDIR=$SNAPCRAFT_PART_INSTALL

hooks:
  install:
    plugs:
      - mount-observe  # to read /proc/*/mounts
      - network  # to connect to the db for running upgrades
  post-refresh:
    plugs:
      - mount-observe  # to read /proc/*/mounts
      - network  # to connect to the db for running upgrades

layout:
  /etc/libvirt:
    bind: $SNAP/etc/libvirt
