@mixin patterns_option-selector {
  // XXX: 28.09.2018 Lyubomir Popov: This pattern is used for two unrelated pieces of UI - in the interfaces table, and in the storage table;
  // A lot of the styling below clashes with the design of the Storage dropdown.
  // To avoid changing the markup and causing potential merge conflicts,
  // the parent selector is used (.p-table--pod-networking-config) to 'scope' the respective styles.
  $icon-space: $sph-inner * 2 + map-get($icon-sizes, default);

  .p-option-selector {
    position: relative;

    &__header {
      @extend %vf-clearfix;
      padding-top: $spv-inner--x-small;

      .p-button--close {
        margin-left: $sph-inner--small;
        float: none;
      }
    }

    &__title {
      padding: $spv-inner--medium $sph-inner 0;
    }

    &__input {
      @extend select;
      color: $color-dark !important;
      cursor: pointer;

      &.in-warning {
        border-color: $color-caution !important;
      }
    }

    [readonly][type="text"].p-option-selector__input {
      color: $color-dark;
      border-color: $color-mid-light;
    }

    .p-option-selector__options--subnets {
      @media (min-width: $breakpoint-medium) {
        width: 70vw;
      }

      @media (min-width: $breakpoint-large) {
        width: 650px;
      }
    }

    .p-option-selector__options-key {
      padding: 0 $sph-inner;
    }

    &__option {
      @include vf-focus;
      cursor: pointer;
      display: flex;
      width: 100%;
      position: relative;

      &:hover {
        background-color: $color-light;
      }

      &.is-over {
        opacity: 0.5;
        pointer-events: none;
        cursor: not-allowed;
      }

      &.is-selected {
        background-color: $color-light;
        background-image: url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='22px' height='16px' viewBox='0 0 22 16' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cdefs%3E%3C/defs%3E%3Cg id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cg id='confirm-tick' transform='translate(-1.000000, -1.000000)'%3E%3Cpolygon id='Shape' points='0 0 24 0 24 24 0 24'%3E%3C/polygon%3E%3Cpolygon id='Shape' fill-opacity='0.999998987' fill='%23666666' fill-rule='nonzero' points='3.872 6.93333333 1.6 9.20533333 9.33333333 16.9386667 22.4 3.872 20.128 1.6 9.33333333 12.3973333'%3E%3C/polygon%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
        background-size: 1rem 1rem;
        background-repeat: no-repeat;
        background-position: 1rem center;
      }

      & + &::after {
        @extend %vf-pseudo-border--top;
        background-color: $color-light-new;
      }
    }
  }

  .p-option-selector__option + .p-option-selector__option::after {
    @extend %vf-pseudo-border--top;
    background-color: $color-light-new;
    .p-table--pod-networking-config & {
      left: $sph-inner;
      right: $sph-inner;
    }
    .p-table--pod-storage-config & {
      left: $icon-space;
      right: $sph-inner;
    }
  }

  .p-table--pod-networking-config {
    .p-option-selector {
      &__options {
        position: absolute;
        top: 2.25rem;
        padding: $sph-inner 0 0;
        border: 1px solid $color-mid-light;
        border-radius: $border-radius;
        box-shadow: $box-shadow;
        background-color: $color-x-light;
        z-index: 10;
        width: 100%;

        @media (min-width: $breakpoint-medium) {
          width: 70vw;
        }

        @media (min-width: $breakpoint-large) {
          left: 0;
          right: -126%;
          width: auto;
        }
      }

      &__options-key {
        padding: 0 $sph-inner;
      }

      &__option-cell {
        padding: $sp-small $sp-medium;

        &:first-child {
          width: 70%;

          @media (min-width: $breakpoint-medium) {
            width: 35%;
          }

          @media (min-width: $breakpoint-large) {
            width: 40%;
          }
        }

        > * {
          overflow: hidden;
          text-overflow: ellipsis;
          white-space: nowrap;
        }

        &:nth-child(2) {
          width: 30%;

          @media (min-width: $breakpoint-medium) {
            width: 20%;
          }

          @media (min-width: $breakpoint-large) {
            width: 15%;
          }
        }

        &:nth-child(3) {
          width: 100%;

          @media (min-width: $breakpoint-medium) {
            width: 45%;
          }
        }
      }
    }
  }

  .p-option-selector--subnets {
    position: relative;

    .p-option-selector__options--subnets {
      @extend %p-card--highlighted;
      left: -45vw;
      position: absolute;
      width: 90vw;
      z-index: 10;

      @media (min-width: $breakpoint-small) {
        left: -226%;
        width: 450%;
      }

      @media (min-width: $breakpoint-large) {
        left: 0;
        right: -126%;
        width: auto;
      }
    }

    .p-option-selector__title--subnets {
      @extend %muted-heading;
      border-bottom: 1px solid $color-mid-light;
      margin-bottom: 0;
      padding-bottom: $spv-inner--x-small--scaleable;
    }

    .p-option-selector__option--subnets {
      @include vf-focus;
      cursor: pointer;

      &:last-of-type {
        margin-bottom: $spv-outer--scaleable;
      }

      &:not(:last-of-type) {
        position: relative;

        &::before {
          background-color: $color-mid-x-light;
          bottom: 0;
          content: "";
          height: 1px;
          position: absolute;
          width: 100%;
        }
      }

      &:hover {
        background-color: $color-light;
      }
    }

    .p-option-selector__option-cell--subnets {
      padding-bottom: $spv-inner--scaleable;
      padding-top: $spv-inner--scaleable;

      &:first-of-type {
        padding-left: $sph-inner--small;
      }

      &:last-of-type {
        padding-right: $sph-inner--small;
      }

      &:nth-of-type(2) {
        @media (max-width: $breakpoint-large) {
          padding-left: $sph-inner--small;
        }
      }
    }

    .p-button--close {
      position: absolute;
      right: -#{$sph-inner--small};
      top: $spv-inner--x-small--scaleable;
    }
  }

  .p-option-selector-subnets__option-cell {
    padding: $sp-small $sp-medium;

    &:first-child {
      width: 70%;

      @media (min-width: $breakpoint-medium) {
        width: 35%;
      }

      @media (min-width: $breakpoint-large) {
        width: 44%;
      }
    }

    > * {
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }

    &:nth-child(2) {
      width: 55%;

      @media (min-width: $breakpoint-medium) {
        width: 50%;
      }

      @media (min-width: $breakpoint-large) {
        width: 25%;
      }
    }

    &:nth-child(3) {
      width: 100%;

      @media (min-width: $breakpoint-medium) {
        width: 35%;
      }

      @media (min-width: $breakpoint-large) {
        width: 31%;
      }
    }
  }

  .p-table--pod-storage-config {
    .p-option-selector__header {
      display: flex;
      justify-content: space-between;

      &::after {
        content: none;
      }
    }

    .p-option-selector__options {
      background-color: $color-x-light;
      border-radius: $border-radius;
      box-shadow: $box-shadow;
      position: absolute;
      top: 2.25rem;
      width: 200%;
      z-index: 10;
    }

    .p-option-selector__option {
      display: grid;

      &.is-selected {
        background-position: $sph-inner $sp-large;
      }
    }

    .p-option-selector__options-key {
      padding: 0 $sph-inner;
    }

    .p-option-selector__option-cell {
      padding: 0 $sph-inner 0 0;

      &:first-of-type {
        padding-left: $sp-xxx-large;
      }

      &:last-of-type {
        padding-left: $sph-inner;

        @media only screen and (min-width: $breakpoint-medium) {
          padding-left: 0;
        }
      }

      > * {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
      }
    }
  }
}

// Key inside option selector
%p-key-icon {
  &::before {
    content: "â€¢";
    float: left;
    font-size: 2rem;
    line-height: map-get($line-heights, default-text);
    margin-right: $sph-inner--small;
    padding-top: map-get($nudges, nudge--p);
    width: $sp-unit;
  }
}

.p-key-icon--free {
  @extend %p-key-icon;
  background-color: transparentize($color-link, 0.8);
}

.p-key-icon--used {
  @extend %p-key-icon;
  background-color: $color-link;
}

.p-key-icon--requests {
  @extend %p-key-icon;
  background-color: $color--request;
}

.p-key-icon--other {
  @extend %p-key-icon;
  background-color: transparentize($color--request, 0.8);
}
