# Unix socket.
module(load="imuxsock" SysSock.Name="{{work_dir}}/log.sock")

# Enable tcp.
module(load="imtcp")
input(type="imtcp" port="{{port}}")

# Enable udp.
module(load="imudp")
input(type="imudp" port="{{port}}")

# Reduce message repetition.
$RepeatedMsgReduction on

# Set the default permissions for all log files.
$FileOwner {{user}}
$FileGroup {{group}}
$FileCreateMode 0640
$DirCreateMode 0755
$Umask 0022
{{if drop_priv}}
$PrivDropToUser {{user}}
$PrivDropToGroup {{group}}
{{endif}}

# Work directory.
$WorkDirectory {{work_dir}}


{{if write_local}}
# Log the messages to disk based on the hostname of the log message.
$template MAASenlist,"{{log_dir}}/rsyslog/%HOSTNAME%/%$YEAR%-%$MONTH%-%$DAY%/%fromhost-ip%"
$template MAASboot,"{{log_dir}}/rsyslog/%HOSTNAME%/%$YEAR%-%$MONTH%-%$DAY%/messages"

if $syslogtag contains "maas" then {
  *.* {{log_dir}}/maas.log
} else {
  if $hostname == "maas-enlisting-node" then {
    :fromhost-ip, !isequal, "127.0.0.1" ?MAASenlist
  } else {
    :fromhost-ip, !isequal, "127.0.0.1" ?MAASboot
  }
}
{{endif}}


# Discard all messages that are not UDP from this point forward. TCP messages
# have already been forwarded from the original UDP message and should not be
# forwarded again. This prevents an infinite loop of messages between
# region+rack controllers.
:inputname, isequal, "imtcp" stop

{{if forwarders}}
# Forward all UDP messages to all the region controllers. TCP messages will
# not make it to this point because of the stop above.
{{for server in forwarders}}
*.* action(type="omfwd" target="{{server['ip']}}" port="{{port}}" protocol="tcp"
           action.resumeRetryCount="-1"
           queue.type="LinkedList" queue.filename="{{server['name']}}"
           queue.saveonshutdown="on")
{{endfor}}
{{endif}}


{{if not write_local}}
# rack-only controller still logs to a local maas.log.
:syslogtag, contains, "maas" {{log_dir}}/maas.log
{{endif}}

# Done.
*.* stop
