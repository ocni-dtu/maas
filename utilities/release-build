#!/bin/bash -e

ROOTDIR="$(dirname "$(dirname "$(realpath "$0")")")"
BUILDDIR="$ROOTDIR/build_pkg"
PACKAGE_BUILD_AREA="$ROOTDIR/../build-area"

declare -A SUPPORTED_RELEASES
SUPPORTED_RELEASES=(
    [eoan]=19.10
    [disco]=19.04
    [cosmic]=18.10
    [bionic]=18.04
)

exit_error() {
    echo "$@"
    exit 1
}

# check that provided release codenames are valid
check_releases() {
    if [ "$#" == 0 ]; then
        exit_error "No distro codename specified."
    fi

    local name
    for name in "$@"; do
        if [ -z "${SUPPORTED_RELEASES[$name]}" ]; then
            exit_error "Unsupported distro: $name"
        fi
    done
}

build_source_package() {
    make -C "$ROOTDIR" package-tree
}

# ensure name and email address are correct for the signing (must have DEBEMAIL
# and DEBFULLNAME set)
ensure_changelog_author() {
    dch -a "" --release-heuristic log --nomultimaint
}

update_changelog_version() {
    local deb_version="$1"
    local release="$2"
    local new_version="${deb_version}~${SUPPORTED_RELEASES[$release]}.1"
    sed -i "1 s/(.*;/($new_version) $release;/" debian/changelog
}


# Main

check_releases "$@"
releases="$*"

mkdir -p "$BUILDDIR"

build_source_package
# copy source package in the build dir
source_package_dir=$(
    find "$PACKAGE_BUILD_AREA" -mindepth 1 -maxdepth 1 -type d | head -n1)
source_package_dir="$(basename "$source_package_dir")"
package_dir="$BUILDDIR/$source_package_dir"
rm -rf "$package_dir"
cp -a "$PACKAGE_BUILD_AREA"/* "$BUILDDIR"

(
    cd "$package_dir"
    ensure_changelog_author
    deb_version=$(sed '1 s/.*(\(.*\)).*/\1/; q'  debian/changelog)

    for release in $releases; do
        update_changelog_version "$deb_version" "$release"
        debuild -S -sa
    done
)
